<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=12
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>272</y>
      <w>336</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>bg=#ccffff
/*TbxMbServer*/
--
+&lt;&lt;Create&gt;&gt; TbxMbServer()

/-readInput      (addr:  uint16_t,/
/                 value: bool&amp;): tTbxMbServerResult/

/-readCoil       (addr:  uint16_t,/
/                 value: bool&amp;): tTbxMbServerResult/

/-writeCoil      (addr:  uint16_t,/
/                 value: bool): tTbxMbServerResult/

/-readInputReg   (addr:  uint16_t,/
/                 value: uint16_t&amp;): tTbxMbServerResult/

/-readHoldingReg (addr:  uint16_t,/
/                 value: uint16_t&amp;): tTbxMbServerResult/

/-writeHoldingReg(addr:  uint16_t,/
/                 value: uint16_t): tTbxMbServerResult/

/-customFunction (rxPdu: uint8_t[],/
/                 txPdu: uint8_t[],/
/                 len:   uint8_t&amp;): bool/

--
#m_Channel: tTbxMbServer



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>128</y>
      <w>336</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>bg=#ffffcc
*TbxMbServerRtu*
--
+&lt;&lt;Create&gt;&gt; TbxMbServerRtu(nodeAddr:   uint8_t,
                         serialPort: tTbxMbUartPort,
                         baudrate:   tTbxMbUartBaudrate,
                         stopbits:   tTbxMbUartStopbits,
                         parity:     tTbxMbUartParity)

--
-m_Transport: tTbxMbTp



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>448</x>
      <y>232</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>632</x>
      <y>272</y>
      <w>360</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>bg=#ccffff
/*TbxMbClient*/
--
+&lt;&lt;Create&gt;&gt; TbxMbClient()

/+readInputs      (node:  uint8_t,/
/                  addr:  uint16_t,/
/                  num:   uint16_t/
/                  inputs: uint8_t[]): uint8_t/

/+readCoils       (node:        uint8_t,/
/                  addr:        uint16_t,/
/                  num:         uint16_t/
/                  coils:       uint8_t[]): uint8_t/

/+writeCoils      (node:        uint8_t,/
/                  addr:        uint16_t,/
/                  num:         uint16_t/
/                  coils:       uint8_t[]): uint8_t/

/+readInputRegs   (node:        uint8_t,/
/                  addr:        uint16_t,/
/                  num:         uint16_t/
/                  inputRegs:   uint16_t[]): uint8_t/

/+readHoldingRegs (node:        uint8_t,/
/                  addr:        uint16_t,/
/                  num:         uint16_t/
/                  holdingRegs: uint16_t[]): uint8_t/

/+writeHoldingRegs(node:        uint8_t,/
/                  addr:        uint16_t,/
/                  num:         uint16_t/
/                  holdingRegs: uint16_t[]): uint8_t/

/+customFunction  (node:        uint8_t,/
/                  txPdu:       uint8_t[],/
/                  rxPdu:       uint8_t[],/
/                  len:         uint8_t&amp;): bool/

--
#m_Channel: tTbxMbClient



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>632</x>
      <y>128</y>
      <w>360</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>bg=#ffffcc
*TbxMbClientRtu*
--
+&lt;&lt;Create&gt;&gt; TbxMbClientRtu(responseTimeout: uint16_t,
                         turnaroundDelay: uint16_t,
                         serialPort:      tTbxMbUartPort,
                         baudrate:        tTbxMbUartBaudrate,
                         stopbits:        tTbxMbUartStopbits,
                         parity:          tTbxMbUartParity)

--
-m_Transport: tTbxMbTp



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>808</x>
      <y>232</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>600</y>
      <w>336</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>bg=#ccffcc
*TbxMbEvent*
--
_+task()_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>664</y>
      <w>336</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>bg=#ccffcc
*TbxMbPort*
--
_+timerCount(): uint16_t_
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
